DROP ALL OBJECTS DELETE FILES;
create table IF NOT EXISTS mpas
(
    mpas_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mpas_name CHARACTER VARYING(10) CHECK (mpas_name <> '') not null UNIQUE
);

create table IF NOT EXISTS genres
(
    genre_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name CHARACTER VARYING(50)  CHECK (genre_name <>'') NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS director (
   director_id    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   director_name  CHARACTER VARYING(100) CHECK (director_name <>'') NOT NULL UNIQUE
);

create table IF NOT EXISTS films
(
    film_id          INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_name        CHARACTER VARYING(100) CHECK (film_name <> '') not null,
    film_description CHARACTER VARYING(255),
    release_date     DATE NOT NULL,
    film_duration    INTEGER CHECK (film_duration > 0) NOT NULL,
    film_genre_id    INTEGER    REFERENCES GENRES (genre_id) ON DELETE SET NULL,
    mpa_id           INTEGER    REFERENCES MPAS (mpas_id) ON DELETE SET NULL
);

create table IF NOT EXISTS users
(
    user_id  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    login    CHARACTER VARYING(50)  CHECK (login <> '') NOT NULL UNIQUE,
    name     CHARACTER VARYING(50),
    email    CHARACTER VARYING(100) NOT NULL UNIQUE,
    birthday DATE
);

create table IF NOT EXISTS friends
(
    friends_id  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    from_user   INTEGER NOT NULL,
    to_user     INTEGER NOT NULL,
    status      CHARACTER VARYING(20) DEFAULT 'Waiting',
    FOREIGN KEY (from_user) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (to_user) REFERENCES users(user_id) ON DELETE CASCADE
);

create table IF NOT EXISTS likes
(
    like_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER NOT NULL,
    film_id INTEGER NOT NULL,
    FOREIGN KEY (film_id) REFERENCES films(film_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS films_genres
(
    film_id  INTEGER REFERENCES FILMS (film_id) ON DELETE CASCADE,
    genre_id INTEGER REFERENCES GENRES (genre_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS films_directors (
   film_id  INTEGER REFERENCES films (film_id) ON DELETE CASCADE,
    director_id INTEGER REFERENCES director (director_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, director_id)
);
